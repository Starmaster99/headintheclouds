---

# systemd as init system
# containerd as container runtime
# flannel as network add-on

- name: install kubeadm
  hosts: all
  become: yes

  tasks:

    - name: disable swap for current session
      shell: sudo swapoff -a

    - name: disable swap permanently
      replace:
        path: /etc/fstab
        regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
        replace: '#\1\2\3swap\4'

    - name: forwarding IPv4 traffic and letting iptables see bridged traffic
      shell: |
        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF

        sudo modprobe overlay
        sudo modprobe br_netfilter

        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF

        sudo sysctl --system
        
    - name: disable firewalld
      systemd:
        name: firewalld
        state: stopped
        enabled: no
      
    - name: update the system 
      yum:
        name: '*'
        state: latest

    - name: prepare to install packages
      shell: |
        sudo yum-config-manager \
         --add-repo \
         https://download.docker.com/linux/centos/docker-ce.repo 
        
        cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
        enabled=1
        gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude=kubelet kubeadm kubectl
        EOF

    - name: install containerd.io, kubeadm, kubelet, kubectl
      yum:
        name:
          - containerd.io
          - kubeadm
          - kubelet
          - kubectl
        disable_excludes: kubernetes
        state: latest

    - name: edit containerd/config.toml 
      shell: |
        containerd config default | sudo tee /etc/containerd/config.toml
        sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

    - name: start containerd and kubelet
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - containerd
        - kubelet


- name: control plane setup
  hosts: master
  gather_facts: no
  become: yes

  tasks:
    - name: cluster init
      shell: |
        sudo kubeadm init --pod-network-cidr=10.244.0.0/16 \
        --apiserver-advertise-address=172.16.0.2
      # this specific subnet is required to use with flannel

    - name: cluster activate
      shell: |
        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config 

    - name: cluster get creds
      shell: sudo kubeadm token create --print-join-command
      register: results
 
    # regex shenanigans 
    - set_fact:
        token: "{{ results.stdout | regex_search(regexp, '\\2') | first }}"
      vars:
        regexp: '([^\s]+\s){4}([^\s]+)'
    - set_fact:
        hash: "{{ results.stdout | regex_search(regexp, '\\2') | first }}"
      vars:
        regexp: '([^\s]+\s){6}([^\s]+)'
 
    - name: set up pod network
      shell: sudo kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
      # make sure you allow traffic on port 8285 


- name: workers join
  hosts: worker
  gather_facts: no
  become: yes
  tasks:
 
  - name: worker nodes join
    shell: |
      sudo kubeadm join {{ hostvars['master-1']['ansible_eth1']['ipv4']['address'] }}:6443 \
      --token {{ hostvars['master-1']['token'] }} \
      --discovery-token-ca-cert-hash {{ hostvars['master-1']['hash'] }}

- name: misc preparations
  hosts: master
  gather_facts: no
  become: yes
  tasks:

  - name: change workers role
    shell: kubectl label node worker-1 node-role.kubernetes.io/worker=worker
    # TODO: change any amount of worker roles    


- name: Deploy an nginx website
  hosts: master
  gather_facts: no
  become: yes
  tasks:

  - name: Copy manifest to `master-1`
    copy:
      src: objects/nginx.yaml
      dest: $HOME/

  - name: Deploy
    shell:
      cmd: sudo kubectl create -f $HOME/nginx.yaml
      
  - debug:
      msg: Success! Check out your new cluster - `172.16.0.2:30001`
